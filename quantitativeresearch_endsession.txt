A multi-stage tool for documenting quantitative research sessions, recording statistical analyses, tracking dataset updates, and creating a structured record of research evolution.

When to use this tool:
- Concluding a quantitative research analysis session
- Documenting updates to datasets and variables
- Recording new statistical analyses and test results
- Tracking creation of data visualizations
- Documenting hypothesis test results and conclusions
- Updating statistical model performance information
- Creating a structured record of research activities
- Establishing a formal conclusion to a focused research period
- Building a historical record of project development
- Documenting observations and insights from statistical analysis
- Updating status values for research activities and entities
- Assigning or modifying priority levels for research tasks
- Establishing or modifying sequential relationships between research processes

Key features:
- Provides a structured, multi-stage workflow for research session documentation
- Records dataset updates in the knowledge graph
- Captures new statistical analyses and their results
- Tracks creation of data visualizations and their purposes
- Documents hypothesis test outcomes with statistical significance
- Updates statistical model performance metrics
- Updates project status information
- Maintains session continuity with unique session IDs
- Supports revision of previous stages when needed
- Offers a comprehensive assembly stage that consolidates all session information
- Manages status progression of research activities
- Tracks priority assignments for research tasks
- Documents sequential relationships between research processes

The endsession tool uses a sequential, multi-stage approach with 9 typical stages:
1. Summary Stage: Records basic session information
2. Dataset Updates Stage: Documents changes to datasets
3. New Analyses Stage: Records new statistical tests performed
4. New Visualizations Stage: Documents visualizations created
5. Hypothesis Results Stage: Records outcomes of hypothesis tests
6. Model Updates Stage: Documents changes to statistical models
7. Status Updates Stage: Records changes to entity status values
8. Project Status Stage: Updates the overall project status
9. Assembly Stage: Consolidates all information and finalizes the session record

Parameters explained:
1. sessionId: Required - Unique identifier for the research session
  - Obtained from the startsession tool
  - Example: "quant_1234567890_abc123"
2. stage: Required - Current stage of the endsession workflow
  - Accepts: "summary", "datasetUpdates", "newAnalyses", "newVisualizations", "hypothesisResults", "modelUpdates", "statusUpdates", "projectStatus", or "assembly"
  - Each stage has specific data requirements and processing logic
3. stageNumber: Required - The sequence number of the current stage
  - Starts at 1 and typically progresses through the stages
  - Used to track progress through the session documentation workflow
4. totalStages: Required - Total number of stages planned for this workflow
  - Typically 9 for the complete workflow
  - Provides context for the progress within the overall process
5. analysis: Optional - Text analysis or observations for the current stage
  - Descriptive text explaining the work done in this stage
  - Example: "Analyzed multiple regression results and identified significant predictors"
6. stageData: Optional - Stage-specific structured data
  - Structure varies by stage type:
    * summary: { summary: "Session summary text", duration: "3 hours", project: "ProjectName" }
    * datasetUpdates: { datasets: [{ name: "Dataset1", size: "500 rows", variables: "10", status: "active", description: "Dataset description" }] }
    * newAnalyses: { analyses: [{ name: "Analysis1", type: "regression", result: "p<0.05", pValue: "0.03", variables: ["var1", "var2"] }] }
    * newVisualizations: { visualizations: [{ name: "Viz1", type: "scatter", description: "Correlation visualization", datasetName: "Dataset1" }] }
    * hypothesisResults: { hypotheses: [{ name: "H1", status: "completed", evidence: "Statistical significance in regression model", pValue: "0.02" }] }
    * modelUpdates: { models: [{ name: "Model1", type: "regression", performance: "RÂ²=0.85", variables: ["var1", "var2"] }] }
    * statusUpdates: { statusUpdates: [{ entityName: "Dataset1", newStatus: "completed", note: "Data cleaning and validation complete" }, { entityName: "Model2", newStatus: "active", note: "Model training in progress" }] }
    * projectStatus: { projectStatus: "active", projectObservation: "Data analysis phase complete", priorityUpdates: [{ entityName: "AnalysisTask1", priority: "high", note: "Critical for upcoming publication" }], sequenceUpdates: [{ before: "DataCleaning", after: "ModelTraining", note: "Reorganized analysis workflow" }] }
    * assembly: No stageData needed - automatically assembled from previous stages
7. nextStageNeeded: Required - Whether additional stages are needed after this one
  - Boolean value (true/false)
  - Set to false on the final stage to complete the session
8. isRevision: Optional - Whether this is revising a previous stage
  - Boolean value (true/false)
  - Default: false
9. revisesStage: Optional - If revising, which stage number is being revised
  - Required when isRevision is true
  - Indicates which previous stage is being updated

Status and Priority Management:
- The statusUpdates stage allows for batch updates to entity status values
- Valid status values include: active, completed, pending, abandoned
- Priority assignments (high, low) can be modified in the projectStatus stage
- Status changes are implemented through has_status relations
- Priority changes are implemented through has_priority relations
- Status and priority changes are tracked to maintain research progress history

Sequential Process Management:
- The projectStatus stage allows for defining or modifying sequential relationships
- The precedes relation is used to establish logical ordering between research processes
- Sequential updates help maintain a coherent research workflow
- Process sequences can be visualized through the loadcontext tool
- Critical research sequences are maintained to ensure methodological integrity

When the endsession workflow completes (assembly stage with nextStageNeeded: false), the tool performs these updates:
1. Dataset Entities: Updates existing datasets or creates new dataset entities with the provided information
2. Statistical Analyses: Creates entities for statistical tests and links them to projects and variables
3. Visualizations: Creates entities for data visualizations and links them to datasets and projects
4. Hypothesis Updates: Updates existing hypotheses or creates new hypothesis entities with test results
5. Model Updates: Updates existing model entities or creates new models with performance metrics
6. Status Updates: Updates entity status values through has_status relations 
7. Priority Updates: Updates entity priority values through has_priority relations
8. Sequence Updates: Updates sequential relationships through precedes relations
9. Project Status: Updates the project status, adds an updated timestamp, and records observations

Return information:
- JSON response with the following structure when stages are in progress:
  * success: Boolean indicating whether the operation succeeded
  * stageCompleted: The stage that was just completed
  * nextStageNeeded: Whether more stages are required
  * stageResult: The processed result of the current stage
- Formatted markdown text summary when the session is completed, including:
  * Session date and project name
  * Summary of the session
  * Dataset updates
  * New statistical analyses
  * New visualizations
  * Hypothesis test results
  * Model updates
  * Status changes
  * Priority modifications
  * Sequential relationship updates
  * Project status update

You should:
- Complete all stages in order for comprehensive session documentation
- Provide specific details in each stage for accurate research documentation
- Specify dataset updates with clear size, variable count, and status information
- Include p-values and variable names for statistical analyses
- Connect visualizations to specific datasets when possible
- Document hypothesis test results with evidence and significance levels
- Include performance metrics when updating statistical models
- Update entity status using has_status relations with valid status values (active, completed, pending, abandoned)
- Assign priorities using has_priority relations with valid priority values (high, low)
- Define process sequences using precedes relations to establish research workflows
- Include relevant observations for project status updates
- If making a revision, specify which stage is being revised
- Only mark nextStageNeeded as false on the final assembly stage
- Review the final summary message to confirm all session details were recorded properly
- Use the unique session ID consistently across all stages 